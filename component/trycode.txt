   
// import { init, onGoogleButtonPress } from '@/services/googleAuth';
// import { Link, useRouter } from 'expo-router';
// import { ErrorMessage, Formik } from 'formik';
// import { useEffect, useState } from 'react';
// import { ActivityIndicator, Pressable, ScrollView, StyleSheet, Text, TextInput, useColorScheme, View } from 'react-native';
// import * as Yup from "yup";
// import CustomText from '../component/CustomText';
// import { useAuthStore } from "../store/authStrore";


// const initialLoginValues = {
//   email: '',
//   password: '',

// }


// const savedValues = {
//   email: 'abc@gmail.com',
//   password: '123456',
// }


// const validationSchema = Yup.object({
//   email: Yup.string().email().required("Please enter your email"),
//   password: Yup.string().min(6).required("Please enter your password"),
// });




// const LoginScreen = () => {


//   const setUser = useAuthStore((state) => state.setUser);

//   const [formValues, setFormValues] = useState(null);
//   const [isFocused, setIsFocused] = useState(false);
//   const router = useRouter();
//   const colorScheme = useColorScheme(); // "light" ya "dark" return karega
//   const [googleLoading, setGoogleLoading] = useState(false);

//   type GoogleProfile = {
//     name: string;
//     email: string;
//     picture: string;
//   };

//   type GoogleSignInResult = {
//     additionalUserInfo: {
//       isNewUser: boolean;
//       profile: GoogleProfile;
//     };
//   };

//   const handleGoogleSignIn = async () => {
//     try {
//       setGoogleLoading(true);
//       const result = await onGoogleButtonPress();

//       if (result && result.additionalUserInfo && result.additionalUserInfo.profile) {
//         const profile = result.additionalUserInfo.profile;

//         setUser({
//           name: profile.name,
//           email: profile.email,
//           picture: profile.picture,
//         });

//         router.replace("/(drawer)/(tabs)");
//       } else {
//         console.log("Google response invalid:", result);
//       }
//     } catch (error) {
//       console.error("Google Sign-in failed:", error);
//     } finally {
//       setGoogleLoading(false);
//     }
//   };



//   // const { theme, toggleTheme } = useThemeStore();
//   useEffect(() => {
//     init();
//   }, []);




//   // const handleGoogleSignIn = async () => {
//   //   try {

//   //     setGoogleLoading(true); 
//   //     await onGoogleButtonPress();
//   //     router.replace('/(drawer)/(tabs)');
//   //   }
//   //    catch (error) {
//   //     console.error("Google Sign-in failed:", error);
//   //   } 
//   //   finally 
//   //   {
//   //     setGoogleLoading(false); // stop loader
//   //   }
//   // };

//   return (
//     <ScrollView style={styles.container}>
//       <Formik
//         initialValues={initialLoginValues || formValues}
//         validationSchema={validationSchema}
//         onSubmit={(values) => {
//           console.log("values------------", values);
//           alert(`Email: ${values.email}\nPassword: ${values.password}`);

//         }}
//         enableReinitialize
//       >
//         {({ handleSubmit, isValid, handleBlur, isSubmitting, handleChange, setFieldValue, handleReset, touched, errors, values, resetForm }) =>
//         (

//           <View style={[styles.container]}>
//             {/* <StatusBar barStyle="light-content" backgroundColor="#f07e3cff" />  */}
//             <Text style={[styles.label, { paddingTop: 70, paddingBottom: 20 }]}>Login</Text>

//             <TextInput
//               style={[styles.input, isFocused && styles.focused]}
//               placeholder='Email'
//               onChangeText={handleChange("email")}
//               value={values.email}
//               // onBlur={handleBlur("email")}
//               onFocus={() => setIsFocused(true)}
//               onBlur={() => setIsFocused(false)}

//             />
//             {/* <MaterialCommunityIcons name="email-outline" size={28} color={#f07e3cff} /> */}


//             <ErrorMessage name='email' >
//               {
//                 errMsg => <Text style={styles.error}>{errMsg}</Text>
//               }
//             </ErrorMessage>

//             <TextInput
//               style={styles.input}
//               placeholder='Password'
//               onChangeText={handleChange("password")}
//               onBlur={handleBlur("password")}
//               value={values.password}

//             />
//             <ErrorMessage name='password'>
//               {
//                 errMsg => <Text style={{ color: 'red', marginLeft: 17, marginBottom: 2 }}>{errMsg}</Text>
//               }
//             </ErrorMessage >
//             <Link href={"/forgotpassword"} style={{ color: "#e06b0bff", textAlign: "center", alignItems: "flex-end" }}>Forgot Password? </Link>
//             <Pressable
//               //disabled={!isValid || !isSubmitting}
//               onPress={() => {
//                 router.replace('/(drawer)/(tabs)');
//               }}
//               style={({ pressed }) => [
//                 {
//                   backgroundColor: pressed ? "#e06b0bff" : "#f8811fff",
//                   padding: 12,
//                   borderRadius: 12,
//                   margin: 17
//                 }
//               ]}>

//               <CustomText style={{ color: "#fff", textAlign: "center" }}>Login</CustomText>

//             </Pressable>


//             <Pressable
//               //disabled={!isValid || !isSubmitting}
//               onPress={() => {
//                 handleGoogleSignIn();

//               }}
//               style={({ pressed }) => [
//                 {
//                   backgroundColor: pressed ? "#e06b0bff" : "#f8811fff",
//                   padding: 12,
//                   borderRadius: 12,
//                   margin: 17
//                 }
//               ]}>2

//               {googleLoading ? (
//                 <ActivityIndicator size="small" color="#fff" />
//               ) : (
//                 <CustomText style={{ color: "#fff", textAlign: "center" }}>
//                   SignIn with Google
//                 </CustomText>
//               )}
//             </Pressable>

//             <Link href={"/register"} style={{ color: "#e06b0bff", textAlign: "center" }}>Don't have an Account? SignUp </Link>


//             {/* <Button
//                     title="Login"
//                     color="#f8811fff"
//                     onPress={() => Alert.alert('Simple Button pressed')}
//                 /> */}
//             {/* 
//                         <View style={{ marginRight: 10 }}>
//                             <Button color="#f8811fff" title="Load Saved Data" onPress={() => setFormValues(savedValues)} />
//                         </View> */}


//           </View>
//         )
//         }
//       </Formik>
//     </ScrollView>
//   )

// }

// export default LoginScreen

// const styles = StyleSheet.create({
//   container:
//   {
//     flex: 1,
//     alignContent: 'flex-start',

//   },
//   input: {
//     borderWidth: 1,
//     marginLeft: 15,
//     marginRight: 15,
//     marginBottom: 10,
//     fontSize: 15,
//     alignItems: "center",
//     justifyContent: "center",
//     borderRadius: 12,
//   },
//   label: {
//     fontWeight: "bold",
//     fontStyle: "normal",
//     fontSize: 25,
//     textAlign: "center",
//     //marginBottom: 1,
//   },
//   label1: {
//     fontWeight: "bold",
//     fontSize: 15,
//     marginLeft: 20
//   },
//   error: {
//     // marginTop: 2,
//     marginLeft: 20,
//     color: 'red',
//     marginBottom: 4
//   },
//   // form:{
//   // //gap: 1,
//   // //flexDirection: 'column',
//   // //justifyContent: 'space-around',
//   // }
//   focused: {
//     borderColor: "orange",
//   },
// })


//firestir \\

// import firestore from "@react-native-firebase/firestore";

// export const getUsers = async () => {
//   try {
//     const usersCollection = await firestore().collection("Users").get();    
//     const users = usersCollection.docs.map((doc) => doc.data());
//     return users;


//     } catch (error) {
//       console.error("Error fetching users:", error);
//       throw error;
//     }       


// };

// export const addUser = async (user: { email: string; password: string }) => {
//   try {
//     const userRef = await firestore().collection("Users").add(user);                
//     return userRef.id;
//     } catch (error) {
//         console.error("Error adding user:", error);
//         throw error;
//     }
// };  


// export const updateUser = async (userId: string, user: { email?: string; password?: string }) => {
//   try {
//     await firestore().collection("Users").doc(userId).update(user);
//     return true;
//     } catch (error) {
//         console.error("Error updating user:", error);
//         throw error;
//     }

// };  

// export const deleteUser = async (userId: string) => {
//   try {
//     await firestore().collection("Users").doc(userId).delete(); 
//     return true;
//     } catch (error) {
//         console.error("Error deleting user:", error);
//         throw error;
//     } 


// };

// // import CustomText from "@/component/CustomText";
// // import { apiName } from "@/constants/constant";
// // import { fetchProductData } from "@/services/service";
// // import { router } from "expo-router";
// // import React, { useEffect, useState } from 'react';
// // import { Button, StyleSheet, View } from 'react-native';
// // import { FlatList } from "react-native-gesture-handler";



// // type User = {
// //   id: number;
// //   name: string;
// //   email: string;
// //   phone: string;
// //   address: { city: string; street: string };
// //   company: { name: string };
// // };

// // const ContactScreen = () => {

// //   const [data, setData] = useState([]);

// //   const submitHandler = () =>{
// // router.navigate('./profile')
// //   }
// // const getData = async () => {
// //   try {
// //     const res = await fetchProductData(apiName.getInfo);
// //     setData(res.data);
// //   } catch (error) {
// //     console.log("error fetching data", error);
// //   }
// // };

// //  useEffect(() => {
// //   getData();
// //   }, []);


// //     const renderItem = ({ item }: { item: User }) => (
// //     <View style={styles.card}>
// //       <CustomText style={styles.name}>{item.name}</CustomText>
// //       <CustomText>Email: {item.email}</CustomText>
// //       <CustomText>Phone: {item.phone}</CustomText>
// //       <CustomText>City: {item.address.city}</CustomText>
// //       <CustomText>Company: {item.company.name}</CustomText>
// //     </View>
// //   );

// //   return (
// //     <View style={{ flex: 1, justifyContent: "center", alignItems: "center",gap:10 }}>
// //       <CustomText> Contact Screen</CustomText>

// //       <Button title="Go About" onPress={() => router.push("/about") }   color="#841584"/>
// //       {/* <Button title="Replace with Home" onPress={() => router.replace("/")}   color="#841584" />
// //       <Button title="Go to Root" onPress={() => router.dismissAll()}    color="#841584"/> */}


// //       {/* <Button title = "Click Me" onPress={submitHandler}></Button> */}


// //       <FlatList 
      
// //       data ={data}
// //       renderItem={renderItem}
// //       keyExtractor={item => item.id.toString()}
// //       contentContainerStyle={styles.container}

// //       />
// //     </View>
// //   )
// // }

// // export default ContactScreen;

// // const styles = StyleSheet.create({
// //   container: {
// //     padding: 16,
// //   },
// //   card: {
// //     backgroundColor: "#f2f2f2",
// //     padding: 12,
// //     borderRadius: 10,
// //     marginBottom: 12,
// //   },
// //   name: {
// //     fontSize: 16,
// //     fontWeight: "bold",
// //     marginBottom: 4,
// //   },
// // });


// import CustomText from "@/component/CustomText";
// import { apiName } from "@/constants/constant";
// import { fetchProductData } from "@/services/service";
// import React, { useEffect, useState } from "react";
// import {
//   FlatList,
//   LayoutAnimation,
//   Platform,
//   StyleSheet,
//   TouchableOpacity,
//   UIManager,
//   View,
// } from "react-native";

// // Enable animation for Android
// if (Platform.OS === "android" && UIManager.setLayoutAnimationEnabledExperimental) {
//   UIManager.setLayoutAnimationEnabledExperimental(true);
// }

// type User = {
//   id: number;
//   name: string;
//   email: string;
//   phone: string;
//   address: { city: string; street: string };
//   company: { name: string };
// };

// const ContactScreen = () => {
//   const [data, setData] = useState<User[]>([]);
//   const [expandedId, setExpandedId] = useState<number | null>(null);

//   const getData = async () => {
//     try {
//       const res = await fetchProductData(apiName.getInfo);
//       setData(res.data);
//     } catch (error) {
//       console.log("error fetching data", error);
//     }
//   };

//   useEffect(() => {
//     getData();
//   }, []);

//   const toggleExpand = (id: number) => {
//     LayoutAnimation.easeInEaseOut(); // smooth expand
//     setExpandedId(prev => (prev === id ? null : id));
//   };

//   const renderItem = ({ item }: { item: User }) => (
//     <View style={styles.card}>
//       {/* Header row with avatar + name + button */}
//       <View style={styles.headerRow}>
//         <View style={styles.avatar}>
//           <CustomText style={styles.avatarText}>
//             {item.name[0]}
//           </CustomText>
//         </View>
//         <CustomText style={styles.name}>{item.name}</CustomText>

//         <TouchableOpacity
//           style={styles.button}
//           onPress={() => toggleExpand(item.id)}
//         >
//           <CustomText style={styles.buttonText}>
//             {expandedId === item.id ? "Hide" : "View Profile"}
//           </CustomText>
//         </TouchableOpacity>
//       </View>

//       {/* Expanded Details */}
//       {expandedId === item.id && (
//         <View style={styles.details}>
//           <CustomText style={styles.detailText}>📧 {item.email}</CustomText>
//           <CustomText style={styles.detailText}>📱 {item.phone}</CustomText>
//           <CustomText style={styles.detailText}>🏙️ {item.address.city}</CustomText>
//           <CustomText style={styles.detailText}>🏢 {item.company.name}</CustomText>
//         </View>
//       )}
//     </View>
//   );

//   return (
//     <View style={{ flex: 1, backgroundColor: "#f8f9fa" }}>
//       <FlatList
//         data={data}
//         renderItem={renderItem}
//         keyExtractor={item => item.id.toString()}
//         contentContainerStyle={styles.container}
//       />
//     </View>
//   );
// };

// export default ContactScreen;

// const styles = StyleSheet.create({
//   container: {
//     padding: 16,
//   },
//   card: {
//     backgroundColor: "#fff",
//     padding: 16,
//     borderRadius: 16,
//     marginBottom: 16,
//     shadowColor: "#000",
//     shadowOpacity: 0.08,
//     shadowOffset: { width: 0, height: 4 },
//     shadowRadius: 6,
//     elevation: 4,
//   },
//   headerRow: {
//     flexDirection: "row",
//     alignItems: "center",
//     justifyContent: "space-between",
//   },
//   avatar: {
//     backgroundColor: "#f07e3cff",
//     width: 40,
//     height: 40,
//     borderRadius: 20,
//     justifyContent: "center",
//     alignItems: "center",
//     marginRight: 12,
//   },
//   avatarText: {
//     color: "#fff",
//     fontWeight: "bold",
//     fontSize: 16,
//   },
//   name: {
//     flex: 1,
//     fontSize: 18,
//     fontWeight: "600",
//     color: "#333",
//   },
//   button: {
//     backgroundColor: "#f07e3cff",
//     paddingVertical: 6,
//     paddingHorizontal: 12,
//     borderRadius: 8,
//   },
//   buttonText: {
//     color: "#fff",
//     fontWeight: "500",
//     fontSize: 14,
//   },
//   details: {
//     marginTop: 12,
//     paddingTop: 10,
//     borderTopWidth: 1,
//     borderTopColor: "#eee",
//     gap: 6,
//   },
//   detailText: {
//     fontSize: 14,
//     color: "#444",
//   },
// });


// import CustomText from '@/component/CustomText';
// import useTheme from '@/hooks/useTheme';
// import { Link, useRouter } from 'expo-router';
// import { Button, Pressable, StyleSheet, View } from 'react-native';
// import useStore from '../../../store/useStore';



// const  HomeScreen =() =>{
//     const router = useRouter();
//     //   const { count } = useCounter();
//   const { theme } = useTheme();

// const { count } = useStore();

//  const handlePress = () => {
  
//     //Alert.alert('Button Pressed!');
//     //router.navigate("/contact");
//    //router.push('/root/settings/media');

//    router.push("/contact")
//   };
//   return (
      
//      <View style={[styles.container, { backgroundColor: theme.background }]}>

//     {/* // <View style={styles.container}> */}
//       <CustomText>
//         Welcome to Home page
        
//       </CustomText>
//      <CustomText>
//        using utilizing context count value : {count}  
        
//       </CustomText>
//        <Link href={ "/about"}>About Page Using Link</Link>

//        <Link href={"/login"} asChild>
//        <Pressable>
//         <CustomText>
//           Go To Login Page Using link but presable
//         </CustomText>
//        </Pressable>
//        </Link>

//       <Link href="/details" style={styles.link}>
//         Open modal
//       </Link>

//      <Link href="/register" style={styles.link}>
//        Register
//       </Link>
//       <Button
//         onPress={handlePress}
//         title="Contact"
//         color="#841584" // Optional: custom color
//       />
//     </View>
//   );
// }

//  export default HomeScreen;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     justifyContent: 'center',
//     alignItems: 'center',
//     gap:10
//   },
//   link: {
//     paddingTop: 20,
//     fontSize: 20,
//   },
// });


// import { Ionicons } from "@expo/vector-icons";
// import React, { useEffect, useState } from "react";
// import {
//     Alert,
//     FlatList,
//     KeyboardAvoidingView,
//     Platform,
//     StyleSheet,
//     Text,
//     TextInput,
//     TouchableOpacity,
//     View,
// } from "react-native";
// import {
//     addTodo,
//     deleteTodo,
//     listenTodos,
//     Todo,
//     toggleTodo,
// } from "../services/firestore";

// const TodoScreen = () => {
//   const [todos, setTodos] = useState<Todo[]>([]);
//   const [title, setTitle] = useState("");

//   // 🔄 Real-time listener
//   useEffect(() => {
//     const unsubscribe = listenTodos(setTodos);
//     return unsubscribe;
//   }, []);

//   // ➕ Add new todo
//   const handleAdd = async () => {
//     if (!title.trim()) {
//       Alert.alert("Error", "Please enter a todo title.");
//       return;
//     }
//     await addTodo(title.trim());
//     setTitle("");
//   };

//   // ✅ Toggle complete
//   const handleToggle = async (item: Todo) => {
//     if (!item.id) return;
//     await toggleTodo(item.id, !item.completed);
//   };

//   // 🗑️ Delete todo
//   const handleDelete = async (item: Todo) => {
//     if (!item.id) return;
//     await deleteTodo(item.id);
//   };

//   const renderItem = ({ item }: { item: Todo }) => (
//     <View style={styles.todoCard}>
//       <TouchableOpacity
//         style={styles.todoTextWrapper}
//         onPress={() => handleToggle(item)}
//       >
//         <Ionicons
//           name={item.completed ? "checkmark-circle" : "ellipse-outline"}
//           size={24}
//           color={item.completed ? "#4CAF50" : "#bbb"}
//           style={{ marginRight: 10 }}
//         />
//         <Text
//           style={[
//             styles.todoText,
//             item.completed && { textDecorationLine: "line-through", color: "#aaa" },
//           ]}
//         >
//           {item.title}
//         </Text>
//       </TouchableOpacity>

//       <TouchableOpacity onPress={() => handleDelete(item)}>
//         <Ionicons name="trash-outline" size={22} color="#e74c3c" />
//       </TouchableOpacity>
//     </View>
//   );

//   return (
//     <KeyboardAvoidingView
//       behavior={Platform.OS === "ios" ? "padding" : undefined}
//       style={{ flex: 1 }}
//     >
//       <View style={styles.container}>
//         <Text style={styles.header}>🔥 Firestore To-Do</Text>

//         {/* Input Bar */}
//         <View style={styles.inputContainer}>
//           <TextInput
//             style={styles.input}
//             placeholder="Add a new task..."
//             placeholderTextColor="#aaa"
//             value={title}
//             onChangeText={setTitle}
//             onSubmitEditing={handleAdd}
//           />
//           <TouchableOpacity style={styles.addBtn} onPress={handleAdd}>
//             <Ionicons name="add" size={26} color="#fff" />
//           </TouchableOpacity>
//         </View>

//         {/* Todo List */}
//         <FlatList
//           data={todos}
//           keyExtractor={(item) => item.id || ""}
//           renderItem={renderItem}
//           showsVerticalScrollIndicator={false}
//           ListEmptyComponent={
//             <Text style={styles.emptyText}>No tasks yet 😴</Text>
//           }
//           contentContainerStyle={{ paddingBottom: 100 }}
//         />
//       </View>
//     </KeyboardAvoidingView>
//   );
// };

// export default TodoScreen;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: "#f8fafc",
//     paddingHorizontal: 20,
//     paddingTop: 60,
//   },
//   header: {
//     fontSize: 28,
//     fontWeight: "700",
//     color: "#ff7b00",
//     textAlign: "center",
//     marginBottom: 20,
//   },
//   inputContainer: {
//     flexDirection: "row",
//     alignItems: "center",
//     backgroundColor: "#fff",
//     borderRadius: 15,
//     paddingHorizontal: 15,
//     paddingVertical: 8,
//     shadowColor: "#000",
//     shadowOpacity: 0.1,
//     shadowRadius: 4,
//     elevation: 4,
//     marginBottom: 20,
//   },
//   input: {
//     flex: 1,
//     fontSize: 16,
//     color: "#333",
//     paddingVertical: 6,
//   },
//   addBtn: {
//     backgroundColor: "#ff7b00",
//     borderRadius: 12,
//     padding: 10,
//     marginLeft: 10,
//     justifyContent: "center",
//     alignItems: "center",
//   },
//   todoCard: {
//     flexDirection: "row",
//     alignItems: "center",
//     justifyContent: "space-between",
//     backgroundColor: "#fff",
//     padding: 15,
//     borderRadius: 14,
//     marginBottom: 12,
//     shadowColor: "#000",
//     shadowOpacity: 0.08,
//     shadowRadius: 3,
//     elevation: 2,
//   },
//   todoTextWrapper: {
//     flexDirection: "row",
//     alignItems: "center",
//     flex: 1,
//   },
//   todoText: {
//     fontSize: 16,
//     color: "#333",
//     flexShrink: 1,
//   },
//   emptyText: {
//     textAlign: "center",
//     marginTop: 40,
//     color: "#888",
//     fontSize: 16,
//   },
// });


// import { Ionicons } from "@expo/vector-icons";
// import firestore from "@react-native-firebase/firestore";
// import React, { useEffect, useState } from "react";
// import {
//     Alert,
//     FlatList,
//     KeyboardAvoidingView,
//     Platform,
//     StyleSheet,
//     Text,
//     TextInput,
//     TouchableOpacity,
//     View,
// } from "react-native";
// import {
//     addTodo,
//     deleteTodo,
//     listenTodos,
//     Todo,
//     toggleTodo,
// } from "../services/firestore";

// const TodoScreen = () => {
//   const [todos, setTodos] = useState<Todo[]>([]);
//   const [title, setTitle] = useState("");
//   const [editingId, setEditingId] = useState<string | null>(null);
//   const [editingText, setEditingText] = useState("");

//   // 🔄 Real-time listener
//   useEffect(() => {
//     const unsubscribe = listenTodos(setTodos);
//     return unsubscribe;
//   }, []);

//   // ➕ Add new todo
//   const handleAdd = async () => {
//     if (!title.trim()) {
//       Alert.alert("Error", "Please enter a todo title.");
//       return;
//     }
//     await addTodo(title.trim());
//     setTitle("");
//   };

//   // ✅ Toggle complete
//   const handleToggle = async (item: Todo) => {
//     if (!item.id) return;
//     await toggleTodo(item.id, !item.completed);
//   };

//   // ✏️ Edit Todo title
//   const handleEditStart = (item: Todo) => {
//     setEditingId(item.id || null);
//     setEditingText(item.title);
//   };

//   const handleEditSave = async (item: Todo) => {
//     if (!item.id) return;
//     if (!editingText.trim()) {
//       Alert.alert("Error", "Task title cannot be empty.");
//       return;
//     }

//     await firestore().collection("todos").doc(item.id).update({
//       title: editingText.trim(),
//     });

//     setEditingId(null);
//     setEditingText("");
//   };

//   // 🗑️ Delete todo
//   const handleDelete = async (item: Todo) => {
//     if (!item.id) return;
//     await deleteTodo(item.id);
//   };

//   const renderItem = ({ item }: { item: Todo }) => (
//     <View style={styles.todoCard}>
//       {/* ✅ Circle toggle */}
//       <TouchableOpacity onPress={() => handleToggle(item)}>
//         <Ionicons
//           name={item.completed ? "checkmark-circle" : "ellipse-outline"}
//           size={26}
//           color={item.completed ? "#4CAF50" : "#bbb"}
//           style={{ marginRight: 10 }}
//         />
//       </TouchableOpacity>

//       {/* ✏️ Editable Title */}
//       <TouchableOpacity
//         style={styles.todoTextWrapper}
//         onPress={() => handleEditStart(item)}
//         activeOpacity={0.8}
//       >
//         {editingId === item.id ? (
//           <TextInput
//             value={editingText}
//             onChangeText={setEditingText}
//             onBlur={() => handleEditSave(item)}
//             onSubmitEditing={() => handleEditSave(item)}
//             style={styles.editInput}
//             autoFocus
//             placeholder="Edit task..."
//           />
//         ) : (
//           <Text
//             style={[
//               styles.todoText,
//               item.completed && {
//                 textDecorationLine: "line-through",
//                 color: "#aaa",
//               },
//             ]}
//           >
//             {item.title}
//           </Text>
//         )}
//       </TouchableOpacity>

//       {/* 🗑️ Delete Button */}
//       <TouchableOpacity onPress={() => handleDelete(item)}>
//         <Ionicons name="trash-outline" size={22} color="#e74c3c" />
//       </TouchableOpacity>
//     </View>
//   );

//   return (
//     <KeyboardAvoidingView
//       behavior={Platform.OS === "ios" ? "padding" : undefined}
//       style={{ flex: 1 }}
//     >
//       <View style={styles.container}>
//         <Text style={styles.header}>🔥 Firestore To-Do</Text>

//         {/* Input Bar */}
//         <View style={styles.inputContainer}>
//           <TextInput
//             style={styles.input}
//             placeholder="Add a new task..."
//             placeholderTextColor="#aaa"
//             value={title}
//             onChangeText={setTitle}
//             onSubmitEditing={handleAdd}
//           />
//           <TouchableOpacity style={styles.addBtn} onPress={handleAdd}>
//             <Ionicons name="add" size={26} color="#fff" />
//           </TouchableOpacity>
//         </View>

//         {/* Todo List */}
//         <FlatList
//           data={todos}
//           keyExtractor={(item) => item.id || ""}
//           renderItem={renderItem}
//           showsVerticalScrollIndicator={false}
//           ListEmptyComponent={
//             <Text style={styles.emptyText}>No tasks yet 😴</Text>
//           }
//           contentContainerStyle={{ paddingBottom: 100 }}
//         />
//       </View>
//     </KeyboardAvoidingView>
//   );
// };

// export default TodoScreen;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: "#f8fafc",
//     paddingHorizontal: 20,
//     paddingTop: 60,
//   },
//   header: {
//     fontSize: 28,
//     fontWeight: "700",
//     color: "#ff7b00",
//     textAlign: "center",
//     marginBottom: 20,
//   },
//   inputContainer: {
//     flexDirection: "row",
//     alignItems: "center",
//     backgroundColor: "#fff",
//     borderRadius: 15,
//     paddingHorizontal: 15,
//     paddingVertical: 8,
//     shadowColor: "#000",
//     shadowOpacity: 0.1,
//     shadowRadius: 4,
//     elevation: 4,
//     marginBottom: 20,
//   },
//   input: {
//     flex: 1,
//     fontSize: 16,
//     color: "#333",
//     paddingVertical: 6,
//   },
//   addBtn: {
//     backgroundColor: "#ff7b00",
//     borderRadius: 12,
//     padding: 10,
//     marginLeft: 10,
//     justifyContent: "center",
//     alignItems: "center",
//   },
//   todoCard: {
//     flexDirection: "row",
//     alignItems: "center",
//     justifyContent: "space-between",
//     backgroundColor: "#fff",
//     padding: 15,
//     borderRadius: 14,
//     marginBottom: 12,
//     shadowColor: "#000",
//     shadowOpacity: 0.08,
//     shadowRadius: 3,
//     elevation: 2,
//   },
//   todoTextWrapper: {
//     flex: 1,
//   },
//   todoText: {
//     fontSize: 16,
//     color: "#333",
//   },
//   editInput: {
//     fontSize: 16,
//     color: "#333",
//     paddingVertical: 2,
//     borderBottomWidth: 1,
//     borderColor: "#ddd",
//   },
//   emptyText: {
//     textAlign: "center",
//     marginTop: 40,
//     color: "#888",
//     fontSize: 16,
//   },
// });


// import { Ionicons } from "@expo/vector-icons";
// import React, { useEffect, useState } from "react";
// import {
//     Alert,
//     FlatList,
//     KeyboardAvoidingView,
//     LayoutAnimation,
//     Platform,
//     StyleSheet,
//     Text,
//     TextInput,
//     TouchableOpacity,
//     UIManager,
//     View,
// } from "react-native";
// import {
//     addSubtask,
//     addTodo,
//     deleteSubtask,
//     deleteTodo,
//     listenSubtasks,
//     listenTodos,
//     Todo,
//     toggleSubtask,
//     toggleTodo,
// } from "../services/firestore";

// // Enable animations on Android
// if (Platform.OS === "android" && UIManager.setLayoutAnimationEnabledExperimental) {
//   UIManager.setLayoutAnimationEnabledExperimental(true);
// }

// const TodoScreen = () => {
//   const [todos, setTodos] = useState<Todo[]>([]);
//   const [title, setTitle] = useState("");
//   const [expandedId, setExpandedId] = useState<string | null>(null);
//   const [subtasks, setSubtasks] = useState<Record<string, Todo[]>>({});
//   const [newSubtask, setNewSubtask] = useState<Record<string, string>>({});

//   useEffect(() => {
//     const unsubscribe = listenTodos(setTodos);
//     return unsubscribe;
//   }, []);

//   // 🔄 Expand / collapse
//   const toggleExpand = (todoId: string) => {
//     LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);
//     if (expandedId === todoId) {
//       setExpandedId(null);
//     } else {
//       setExpandedId(todoId);
//       // listen to subtasks
//       const unsub = listenSubtasks(todoId, (list) =>
//         setSubtasks((prev) => ({ ...prev, [todoId]: list }))
//       );
//       return unsub;
//     }
//   };

//   const handleAdd = async () => {
//     if (!title.trim()) {
//       Alert.alert("Error", "Please enter a todo title.");
//       return;
//     }
//     await addTodo(title.trim());
//     setTitle("");
//   };

//   const handleAddSubtask = async (todoId: string) => {
//     const subTitle = newSubtask[todoId];
//     if (!subTitle?.trim()) return;
//     await addSubtask(todoId, subTitle.trim());
//     setNewSubtask((prev) => ({ ...prev, [todoId]: "" }));
//   };

//   const renderSubtasks = (todoId: string) => {
//     const list = subtasks[todoId] || [];
//     return (
//       <View style={styles.subtaskContainer}>
//         {list.map((sub) => (
//           <View key={sub.id} style={styles.subtaskRow}>
//             <TouchableOpacity
//               onPress={() => toggleSubtask(todoId, sub.id!, !sub.completed)}
//             >
//               <Ionicons
//                 name={sub.completed ? "checkmark-circle" : "ellipse-outline"}
//                 size={20}
//                 color={sub.completed ? "#4CAF50" : "#bbb"}
//               />
//             </TouchableOpacity>
//             <Text
//               style={[
//                 styles.subtaskText,
//                 sub.completed && { textDecorationLine: "line-through", color: "#888" },
//               ]}
//             >
//               {sub.title}
//             </Text>
//             <TouchableOpacity onPress={() => deleteSubtask(todoId, sub.id!)}>
//               <Ionicons name="trash-outline" size={18} color="#e74c3c" />
//             </TouchableOpacity>
//           </View>
//         ))}

//         {/* Add Subtask Input */}
//         <View style={styles.subtaskInputRow}>
//           <TextInput
//             style={styles.subtaskInput}
//             placeholder="Add subtask..."
//             value={newSubtask[todoId] || ""}
//             onChangeText={(text) =>
//               setNewSubtask((prev) => ({ ...prev, [todoId]: text }))
//             }
//             onSubmitEditing={() => handleAddSubtask(todoId)}
//           />
//           <TouchableOpacity onPress={() => handleAddSubtask(todoId)}>
//             <Ionicons name="add" size={22} color="#ff7b00" />
//           </TouchableOpacity>
//         </View>
//       </View>
//     );
//   };

//   const renderItem = ({ item }: { item: Todo }) => (
//     <View style={styles.todoCard}>
//       <View style={styles.row}>
//         <TouchableOpacity onPress={() => toggleTodo(item.id!, !item.completed)}>
//           <Ionicons
//             name={item.completed ? "checkmark-circle" : "ellipse-outline"}
//             size={26}
//             color={item.completed ? "#4CAF50" : "#bbb"}
//           />
//         </TouchableOpacity>

//         <Text
//           style={[
//             styles.todoText,
//             item.completed && { textDecorationLine: "line-through", color: "#aaa" },
//           ]}
//         >
//           {item.title}
//         </Text>

//         <TouchableOpacity onPress={() => toggleExpand(item.id!)}>
//           <Ionicons
//             name={expandedId === item.id ? "chevron-up" : "chevron-down"}
//             size={22}
//             color="#777"
//           />
//         </TouchableOpacity>

//         <TouchableOpacity onPress={() => deleteTodo(item.id!)}>
//           <Ionicons name="trash-outline" size={22} color="#e74c3c" />
//         </TouchableOpacity>
//       </View>

//       {expandedId === item.id && renderSubtasks(item.id!)}
//     </View>
//   );

//   return (
//     <KeyboardAvoidingView
//       behavior={Platform.OS === "ios" ? "padding" : undefined}
//       style={{ flex: 1 }}
//     >
//       <View style={styles.container}>
//         <Text style={styles.header}>🗂️ Firestore Tasks + Subtasks</Text>

//         {/* Input */}
//         <View style={styles.inputContainer}>
//           <TextInput
//             style={styles.input}
//             placeholder="Add a new task..."
//             value={title}
//             onChangeText={setTitle}
//             onSubmitEditing={handleAdd}
//           />
//           <TouchableOpacity style={styles.addBtn} onPress={handleAdd}>
//             <Ionicons name="add" size={26} color="#fff" />
//           </TouchableOpacity>
//         </View>

//         <FlatList
//           data={todos}
//           keyExtractor={(item) => item.id!}
//           renderItem={renderItem}
//           contentContainerStyle={{ paddingBottom: 100 }}
//         />
//       </View>
//     </KeyboardAvoidingView>
//   );
// };

// export default TodoScreen;

// const styles = StyleSheet.create({
//   container: { flex: 1, backgroundColor: "#f8fafc", padding: 20, paddingTop: 60 },
//   header: { fontSize: 24, fontWeight: "700", color: "#ff7b00", textAlign: "center", marginBottom: 20 },
//   inputContainer: { flexDirection: "row", alignItems: "center", backgroundColor: "#fff", borderRadius: 15, paddingHorizontal: 15, paddingVertical: 8, marginBottom: 20 },
//   input: { flex: 1, fontSize: 16 },
//   addBtn: { backgroundColor: "#ff7b00", borderRadius: 12, padding: 10 },
//   todoCard: { backgroundColor: "#fff", borderRadius: 12, marginBottom: 10, padding: 12 },
//   row: { flexDirection: "row", alignItems: "center", justifyContent: "space-between" },
//   todoText: { flex: 1, fontSize: 16, marginLeft: 10, color: "#333" },
//   subtaskContainer: { marginTop: 10, paddingLeft: 35 },
//   subtaskRow: { flexDirection: "row", alignItems: "center", justifyContent: "space-between", marginBottom: 6 },
//   subtaskText: { flex: 1, marginLeft: 10, color: "#333" },
//   subtaskInputRow: { flexDirection: "row", alignItems: "center", marginTop: 8 },
//   subtaskInput: { flex: 1, borderBottomWidth: 1, borderColor: "#ddd", paddingVertical: 4, marginRight: 8 },
// });


// import firestore from "@react-native-firebase/firestore";

// // Export Firestore instance
// //export { firestore };

// // Type definition for Todo
// export interface Todo {
//   id?: string;
//   title: string;
//   completed: boolean;
// }

// // ➕ Add Todo
// export const addTodo = async (title: string) => {
//   try {
//     await firestore().collection("todos").add({
//       title,
//       completed: false,
//       createdAt: firestore.FieldValue.serverTimestamp(),
//     });
//     console.log("✅ Todo added!");
//   } catch (error) {
//     console.error("❌ Error adding todo:", error);
//   }
// };

// // 📖 Get Todos (real-time listener)
// export const listenTodos = (callback: (todos: Todo[]) => void) => {
//   return firestore()
//     .collection("todos")
//     .orderBy("createdAt", "desc")
//     .onSnapshot((snapshot) => {
//       const todos: Todo[] = snapshot.docs.map((doc) => ({
//         id: doc.id,
//         ...(doc.data() as Todo),
//       }));
//       callback(todos);
//     });
// };

// // ✏️ Update Todo (toggle completed)
// export const toggleTodo = async (id: string, completed: boolean) => {
//   try {
//     await firestore().collection("todos").doc(id).update({ completed });
//     console.log("✏️ Todo updated!");
//   } catch (error) {
//     console.error("❌ Update error:", error);
//   }
// };

// // 🗑️ Delete Todo
// export const deleteTodo = async (id: string) => {
//   try {
//     await firestore().collection("todos").doc(id).delete();
//     console.log("🗑️ Todo deleted!");
//   } catch (error) {
//     console.error("❌ Delete error:", error);
//   }
// };



// import { Ionicons } from "@expo/vector-icons";
// import firestore from "@react-native-firebase/firestore";
// import React, { useEffect, useRef, useState } from "react";
// import {
//     Alert,
//     Animated,
//     Dimensions,
//     FlatList,
//     KeyboardAvoidingView,
//     Platform,
//     StyleSheet,
//     Text,
//     TextInput,
//     TouchableOpacity,
//     View,
// } from "react-native";
// import {
//     addSubtask,
//     addTodo,
//     deleteSubtask,
//     deleteTodo,
//     listenSubtasks,
//     listenTodos,
//     Todo,
//     toggleSubtask,
//     toggleTodo,
// } from "../services/firestore";

// const screenWidth = Dimensions.get("window").width;

// const TodoScreen = () => {
//   const [todos, setTodos] = useState<Todo[]>([]);
//   const [title, setTitle] = useState("");
//   const [editingId, setEditingId] = useState<string | null>(null);
//   const [editingText, setEditingText] = useState("");
//   const [selectedTask, setSelectedTask] = useState<Todo | null>(null);
//   const [subtasks, setSubtasks] = useState<Todo[]>([]);
//   const [newSubtask, setNewSubtask] = useState("");

//   const slideAnim = useRef(new Animated.Value(screenWidth)).current;

  
//   // 🔄 Real-time listener
//   useEffect(() => {
//     const unsubscribe = listenTodos(setTodos);
//     return unsubscribe;
//   }, []);

//   // 🔁 Listen to subtasks of selected task
//   useEffect(() => {
//     if (!selectedTask?.id) return;
//     const unsub = listenSubtasks(selectedTask.id, setSubtasks);
//     return unsub;
//   }, [selectedTask]);

//   // ➕ Add new todo
//   const handleAdd = async () => {
//     if (!title.trim()) {
//       Alert.alert("Error", "Please enter a todo title.");
//       return;
//     }
//     await addTodo(title.trim());
//     setTitle("");
//   };

//   // Toggle complete
//   const handleToggle = async (item: Todo) => {
//     if (!item.id) return;
//     await toggleTodo(item.id, !item.completed);
//   };

//   // Edit Todo title
//   const handleEditStart = (item: Todo) => {
//     setEditingId(item.id || null);
//     setEditingText(item.title);
//   };

//   const handleEditSave = async (item: Todo) => {
//     if (!item.id) return;
//     if (!editingText.trim()) {
//       Alert.alert("Error", "Task title cannot be empty.");
//       return;
//     }

//     await firestore().collection("todos").doc(item.id).update({
//       title: editingText.trim(),
//     });

//     setEditingId(null);
//     setEditingText("");
//   };

//   // 🗑️ Delete todo
//   const handleDelete = async (item: Todo) => {
//     if (!item.id) return;
//     await deleteTodo(item.id);
//   };

//   // 🪄 Open side panel
//   const handleSelectTask = (item: Todo) => {
//     setSelectedTask(item);
//     Animated.timing(slideAnim, {
//       toValue: 0,
//       duration: 300,
//       useNativeDriver: true,
//     }).start();
//   };

//   // ❌ Close side panel
//   const closePanel = () => {
//     Animated.timing(slideAnim, {
//       toValue: screenWidth,
//       duration: 300,
//       useNativeDriver: true,
//     }).start(() => setSelectedTask(null));
//   };

//   // ➕ Add Subtask
//   const handleAddSubtask = async () => {
//     if (!selectedTask?.id || !newSubtask.trim()) return;
//     await addSubtask(selectedTask.id, newSubtask.trim());
//     setNewSubtask("");
//   };

//   const renderItem = ({ item }: { item: Todo }) => (
//     <TouchableOpacity onPress={() => handleSelectTask(item)}>
//       <View style={styles.todoCard}>
//         {/* ✅ Circle toggle */}
//         <TouchableOpacity onPress={() => handleToggle(item)}>
//           <Ionicons
//             name={item.completed ? "checkmark-circle" : "ellipse-outline"}
//             size={26}
//             color={item.completed ? "#4CAF50" : "#bbb"}
//             style={{ marginRight: 10 }}
//           />
//         </TouchableOpacity>

//         {/* ✏️ Editable Title */}
//         <TouchableOpacity
//           style={styles.todoTextWrapper}
//           onLongPress={() => handleEditStart(item)}
//           activeOpacity={0.8}
//         >
//           {editingId === item.id ? (
//             <TextInput
//               value={editingText}
//               onChangeText={setEditingText}
//               onBlur={() => handleEditSave(item)}
//               onSubmitEditing={() => handleEditSave(item)}
//               style={styles.editInput}
//               autoFocus
//               placeholder="Edit task..."
//             />
//           ) : (
//             <Text
//               style={[
//                 styles.todoText,
//                 item.completed && {
//                   textDecorationLine: "line-through",
//                   color: "#aaa",
//                 },
//               ]}
//             >
//               {item.title}
//             </Text>
//           )}
//         </TouchableOpacity>

//         {/* 🗑️ Delete Button */}
//         <TouchableOpacity onPress={() => handleDelete(item)}>
//           <Ionicons name="trash-outline" size={22} color="#e74c3c" />
//         </TouchableOpacity>
//       </View>
//     </TouchableOpacity>
//   );

//   return (
//     <KeyboardAvoidingView
//       behavior={Platform.OS === "ios" ? "padding" : undefined}
//       style={{ flex: 1 }}
//     >
//       <View style={styles.container}>
//         <Text style={styles.header}>🔥 Firestore To-Do</Text>

//         {/* Input Bar */}
//         <View style={styles.inputContainer}>
//           <TextInput
//             style={styles.input}
//             placeholder="Add a new task..."
//             placeholderTextColor="#aaa"
//             value={title}
//             onChangeText={setTitle}
//             onSubmitEditing={handleAdd}
//           />
//           <TouchableOpacity style={styles.addBtn} onPress={handleAdd}>
//             <Ionicons name="add" size={26} color="#fff" />
//           </TouchableOpacity>
//         </View>

//         {/* Todo List */}
//         <FlatList
//           data={todos}
//           keyExtractor={(item) => item.id || ""}
//           renderItem={renderItem}
//           showsVerticalScrollIndicator={false}
//           ListEmptyComponent={
//             <Text style={styles.emptyText}>No tasks yet 😴</Text>
//           }
//           contentContainerStyle={{ paddingBottom: 100 }}
//         />

//         {/* 🪄 Slide-In Right Panel */}
//         {selectedTask && (
//           <Animated.View
//             style={[
//               styles.detailPanel,
//               { transform: [{ translateX: slideAnim }] },
//             ]}
//           >
//             <View style={styles.detailHeader}>
//               <Text style={styles.detailTitle}>{selectedTask.title}</Text>
//               <TouchableOpacity onPress={closePanel}>
//                 <Ionicons name="close" size={26} color="#333" />
//               </TouchableOpacity>
//             </View>

//             <FlatList
//               data={subtasks}
//               keyExtractor={(item) => item.id || ""}
//               renderItem={({ item }) => (
//                 <View style={styles.subtaskRow}>
//                   <TouchableOpacity
//                     onPress={() =>
//                       toggleSubtask(selectedTask.id!, item.id!, !item.completed)
//                     }
//                   >
//                     <Ionicons
//                       name={
//                         item.completed ? "checkmark-circle" : "ellipse-outline"
//                       }
//                       size={22}
//                       color={item.completed ? "#4CAF50" : "#bbb"}
//                     />
//                   </TouchableOpacity>
//                   <Text
//                     style={[
//                       styles.subtaskText,
//                       item.completed && {
//                         textDecorationLine: "line-through",
//                         color: "#888",
//                       },
//                     ]}
//                   >
//                     {item.title}
//                   </Text>
//                   <TouchableOpacity
//                     onPress={() =>
//                       deleteSubtask(selectedTask.id!, item.id!)
//                     }
//                   >
//                     <Ionicons name="trash-outline" size={18} color="#e74c3c" />
//                   </TouchableOpacity>
//                 </View>
//               )}
//               ListEmptyComponent={
//                 <Text style={styles.emptyText}>No subtasks yet.</Text>
//               }
//             />

//             {/* Add Subtask Input */}
//             <View style={styles.subtaskInputRow}>
//               <TextInput
//                 style={styles.subtaskInput}
//                 placeholder="Add subtask..."
//                 value={newSubtask}
//                 onChangeText={setNewSubtask}
//                 onSubmitEditing={handleAddSubtask}
//               />
//               <TouchableOpacity onPress={handleAddSubtask}>
//                 <Ionicons name="add" size={24} color="#ff7b00" />
//               </TouchableOpacity>
//             </View>
//           </Animated.View>
//         )}
//       </View>
//     </KeyboardAvoidingView>
//   );
// };

// export default TodoScreen;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: "#f8fafc",
//     paddingHorizontal: 20,
//     paddingTop: 60,
//   },
//   header: {
//     fontSize: 28,
//     fontWeight: "700",
//     color: "#ff7b00",
//     textAlign: "center",
//     marginBottom: 20,
//   },
//   inputContainer: {
//     flexDirection: "row",
//     alignItems: "center",
//     backgroundColor: "#fff",
//     borderRadius: 15,
//     paddingHorizontal: 15,
//     paddingVertical: 8,
//     shadowColor: "#000",
//     shadowOpacity: 0.1,
//     shadowRadius: 4,
//     elevation: 4,
//     marginBottom: 20,
//   },
//   input: {
//     flex: 1,
//     fontSize: 16,
//     color: "#333",
//     paddingVertical: 6,
//   },
//   addBtn: {
//     backgroundColor: "#ff7b00",
//     borderRadius: 12,
//     padding: 10,
//     marginLeft: 10,
//     justifyContent: "center",
//     alignItems: "center",
//   },
//   todoCard: {
//     flexDirection: "row",
//     alignItems: "center",
//     justifyContent: "space-between",
//     backgroundColor: "#fff",
//     padding: 15,
//     borderRadius: 14,
//     marginBottom: 12,
//     shadowColor: "#000",
//     shadowOpacity: 0.08,
//     shadowRadius: 3,
//     elevation: 2,
//   },
//   todoTextWrapper: { flex: 1 },
//   todoText: { fontSize: 16, color: "#333" },
//   editInput: {
//     fontSize: 16,
//     color: "#333",
//     paddingVertical: 2,
//     borderBottomWidth: 1,
//     borderColor: "#ddd",
//   },
//   emptyText: { textAlign: "center", color: "#888", marginTop: 20 },
//   detailPanel: {
//     position: "absolute",
//     top: 0,
//     right: 0,
//     width: "70%",
//     height: "100%",
//     backgroundColor: "#fff",
//     padding: 20,
//     borderLeftWidth: 1,
//     borderColor: "#ddd",
//     elevation: 8,
//   },
//   detailHeader: {
//     flexDirection: "row",
//     alignItems: "center",
//     justifyContent: "space-between",
//     marginBottom: 20,
//   },
//   detailTitle: { fontSize: 20, fontWeight: "700", color: "#ff7b00" },
//   subtaskRow: {
//     flexDirection: "row",
//     alignItems: "center",
//     justifyContent: "space-between",
//     marginBottom: 10,
//   },
//   subtaskText: { flex: 1, marginLeft: 10, color: "#333", fontSize: 15 },
//   subtaskInputRow: {
//     flexDirection: "row",
//     alignItems: "center",
//     marginTop: 15,
//     borderTopWidth: 1,
//     borderColor: "#eee",
//     paddingTop: 10,
//   },
//   subtaskInput: {
//     flex: 1,
//     borderBottomWidth: 1,
//     borderColor: "#ddd",
//     marginRight: 8,
//     paddingVertical: 4,
//   },
// });

// import CustomText from '@/component/CustomText';
// import useTheme from '@/hooks/useTheme';
// import { Link, useRouter } from 'expo-router';
// import { Image, Pressable, StyleSheet, View } from 'react-native';
// import { useAuthStore } from '../../..//store/authStrore';
// import useStore from '../../../store/useStore';

// const HomeScreen = () => {
//   const router = useRouter();
//   const { theme } = useTheme();
//   const { count } = useStore();
//   const user = useAuthStore((state) => state.user);

//   const handlePress = () => {
//     router.push("/contact");
//   };

//   return (
//     <View style={[styles.container, { backgroundColor: theme.background }]}>
//       <CustomText style={styles.title}>🏠 Welcome to Home</CustomText>

//       <CustomText style={styles.subtitle}>
//         Context Count Value : <CustomText style={styles.highlight}>{count}</CustomText>
//       </CustomText>

//       {user ? (
//         <View style={styles.profileBox}>
//           <Image source={{ uri: user.picture }} style={styles.avatar} />
//           <CustomText style={styles.name}>{user.name}</CustomText>
//           <CustomText style={styles.email}>{user.email}</CustomText>
//         </View>
//       ) : (
//         <CustomText style={styles.noUser}>No user logged in</CustomText>
//       )}

//       <View style={styles.links}>
//         <Link href={"/about"} style={styles.linkBtn}>
//           <CustomText style={styles.linkText}>📖 About Page</CustomText>
//         </Link>

//         <Link href={"/login"} asChild>
//           <Pressable style={styles.linkBtn}>
//             <CustomText style={styles.linkText}>🔑 Go To Login</CustomText>
//           </Pressable>
//         </Link>

//         <Link href="/details" style={styles.linkBtn}>
//           <CustomText style={styles.linkText}>📂 Open Modal</CustomText>
//         </Link>

//         <Link href="/register" style={styles.linkBtn}>
//           <CustomText style={styles.linkText}>📝 Register</CustomText>
//         </Link>

//         <Link href="/todo" style={styles.linkBtn}>
//           <CustomText style={styles.linkText}>Open ToDo</CustomText>
//         </Link>
//       </View>

//       <Pressable style={styles.contactBtn} onPress={handlePress}>
//         <CustomText style={styles.contactText}>📩 Contact</CustomText>
//       </Pressable>
//     </View>
//   );
// };

// export default HomeScreen;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     justifyContent: 'center',
//     alignItems: 'center',
//     paddingHorizontal: 20,
//     paddingVertical: 40,
//     gap: 15,
//   },
//   title: {
//     fontSize: 28,
//     fontWeight: 'bold',
//     marginBottom: 10,
//     color: "#f8811f",
//     textAlign: "center",
//   },
//   subtitle: {
//     fontSize: 16,
//     marginBottom: 20,
//     color: "#555",
//   },
//   highlight: {
//     fontWeight: "bold",
//     color: "#f07e3c",
//   },
//   profileBox: {
//     alignItems: 'center',
//     marginVertical: 20,
//     backgroundColor: "#fff",
//     padding: 20,
//     borderRadius: 15,
//     shadowColor: "#000",
//     shadowOpacity: 0.1,
//     shadowRadius: 10,
//     shadowOffset: { width: 0, height: 4 },
//     elevation: 5,
//     width: "90%",
//   },
//   avatar: {
//     width: 90,
//     height: 90,
//     borderRadius: 45,
//     marginBottom: 10,
//   },
//   name: {
//     fontSize: 20,
//     fontWeight: 'bold',
//     color: "#333",
//   },
//   email: {
//     fontSize: 14,
//     color: 'gray',
//   },
//   noUser: {
//     fontSize: 16,
//     color: "red",
//     marginVertical: 10,
//   },
//   links: {
//     width: "100%",
//     alignItems: "center",
//     marginVertical: 15,
//   },
//   linkBtn: {
//     backgroundColor: "#f8811f",
//     paddingVertical: 12,
//     paddingHorizontal: 20,
//     borderRadius: 12,
//     marginVertical: 6,
//     width: "90%",
//     alignItems: "center",
//   },
//   linkText: {
//     color: "#fff",
//     fontSize: 16,
//     fontWeight: "500",
//   },
//   contactBtn: {
//     marginTop: 15,
//     backgroundColor: "#e06b0b",
//     paddingVertical: 14,
//     paddingHorizontal: 30,
//     borderRadius: 14,
//     shadowColor: "#000",
//     shadowOpacity: 0.15,
//     shadowRadius: 8,
//     elevation: 4,
//   },
//   contactText: {
//     color: "#fff",
//     fontSize: 18,
//     fontWeight: "600",
//   },
// });


// import CustomText from '@/component/CustomText';
// import useTheme from '@/hooks/useTheme';
// import { Link, useRouter } from 'expo-router';
// import { Image, Pressable, ScrollView, StyleSheet, View } from 'react-native';
// import { useAuthStore } from '../../../store/authStrore';
// import useStore from '../../../store/useStore';

// const HomeScreen = () => {
//   const router = useRouter();
//   const { theme } = useTheme();
//   const { count } = useStore();
//   const user = useAuthStore((state) => state.user);

//   const handlePress = () => {
//     router.push("/contact");
//   };

//   return (
//     <ScrollView
//       style={[styles.container, { backgroundColor: theme.background }]}
//       contentContainerStyle={styles.contentContainer}
//       showsVerticalScrollIndicator={false}
//     >
//       <CustomText style={styles.title}>🏡 Welcome Home</CustomText>

//       <CustomText style={styles.subtitle}>
//         Current Count: <CustomText style={styles.highlight}>{count}</CustomText>
//       </CustomText>

//       {user ? (
//         <View style={styles.profileCard}>
//           <Image source={{ uri: user.picture }} style={styles.avatar} />
//           <CustomText style={styles.name}>{user.name}</CustomText>
//           <CustomText style={styles.email}>{user.email}</CustomText>
//         </View>
//       ) : (
//         <CustomText style={styles.noUser}>No user logged in</CustomText>
//       )}

//       <View style={styles.linksContainer}>
//         <Link href="/about" style={styles.cardLink}>
//           <CustomText style={styles.cardText}>📖 About</CustomText>
//         </Link>

//         <Link href="/login" asChild>
//           <Pressable style={styles.cardLink}>
//             <CustomText style={styles.cardText}>🔑 Login</CustomText>
//           </Pressable>
//         </Link>

//         <Link href="/details" style={styles.cardLink}>
//           <CustomText style={styles.cardText}>📂 Details</CustomText>
//         </Link>

//         <Link href="/register" style={styles.cardLink}>
//           <CustomText style={styles.cardText}>📝 Register</CustomText>
//         </Link>

//         <Link href="/todo" style={styles.cardLink}>
//           <CustomText style={styles.cardText}>📝 ToDo</CustomText>
//         </Link>
//       </View>

//       <Pressable style={styles.contactBtn} onPress={handlePress}>
//         <CustomText style={styles.contactText}>📩 Contact Us</CustomText>
//       </Pressable>
//     </ScrollView>
//   );
// };

// export default HomeScreen;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     paddingHorizontal: 20,
//   },
//   contentContainer: {
//     alignItems: 'center',
//     paddingVertical: 50,
//   },
//   title: {
//     fontSize: 30,
//     fontWeight: 'bold',
//     color: "#4A90E2", // soft blue
//     textAlign: "center",
//     marginBottom: 5,
//   },
//   subtitle: {
//     fontSize: 16,
//     color: "#666",
//     marginBottom: 25,
//     textAlign: "center",
//   },
//   highlight: {
//     fontWeight: "bold",
//     color: "#FF8C42", // soft orange
//   },
//   profileCard: {
//     width: '90%',
//     backgroundColor: '#F9F9F9', // light background
//     borderRadius: 20,
//     padding: 25,
//     alignItems: 'center',
//     shadowColor: '#000',
//     shadowOpacity: 0.05,
//     shadowOffset: { width: 0, height: 6 },
//     shadowRadius: 10,
//     elevation: 3,
//     marginBottom: 30,
//   },
//   avatar: {
//     width: 100,
//     height: 100,
//     borderRadius: 50,
//     marginBottom: 15,
//     borderWidth: 2,
//     borderColor: "#E0E0E0",
//   },
//   name: {
//     fontSize: 20,
//     fontWeight: '700',
//     color: '#333',
//     marginBottom: 5,
//   },
//   email: {
//     fontSize: 14,
//     color: '#888',
//   },
//   noUser: {
//     fontSize: 16,
//     color: '#E74C3C',
//     marginVertical: 15,
//   },
//   linksContainer: {
//     width: '100%',
//     flexDirection: 'row',
//     flexWrap: 'wrap',
//     justifyContent: 'space-around',
//     marginBottom: 30,
//   },
//   cardLink: {
//     backgroundColor: '#FFFFFF',
//     width: '42%',
//     marginVertical: 8,
//     paddingVertical: 20,
//     borderRadius: 15,
//     alignItems: 'center',
//     shadowColor: '#000',
//     shadowOpacity: 0.05,
//     shadowOffset: { width: 0, height: 4 },
//     shadowRadius: 8,
//     elevation: 2,
//     borderWidth: 1,
//     borderColor: '#E0E0E0',
//   },
//   cardText: {
//     color: '#4A90E2', // soft blue
//     fontSize: 16,
//     fontWeight: '600',
//   },
//   contactBtn: {
//     backgroundColor: '#FFB347', // pastel orange
//     paddingVertical: 18,
//     paddingHorizontal: 35,
//     borderRadius: 20,
//     shadowColor: '#000',
//     shadowOpacity: 0.05,
//     shadowOffset: { width: 0, height: 6 },
//     shadowRadius: 10,
//     elevation: 3,
//     marginBottom: 50,
//   },
//   contactText: {
//     color: '#fff',
//     fontSize: 18,
//     fontWeight: '700',
//   },
// });

// import CustomText from "@/component/CustomText";
// import { FontAwesome5, Ionicons, MaterialCommunityIcons } from "@expo/vector-icons";
// import { useLocalSearchParams } from "expo-router";
// import React from "react";
// import { StyleSheet, TouchableOpacity, View } from "react-native";

// import useTheme from '@/hooks/useTheme';

// type User = {
//     id: number;
//     name: string;
//     email: string;
//     phone: string;
//     address: { city: string; street: string };
//     company: { name: string };
// };

// const ProfileDetails = () => {
//     const params = useLocalSearchParams();
//     const user: User = params.user ? JSON.parse(params.user as string) : null;

//     if (!user) {
//         return (
//             <View style={styles.container}>
//                 <CustomText style={styles.errorText}>No user data available</CustomText>
//             </View>
//         );
//     }
//     const { theme } = useTheme();


//     return (

//         <View style={[styles.container, { backgroundColor: theme.background }]}>

//             <View style={styles.header}>
//                 <TouchableOpacity style={styles.backButton} onPress={() => router.back()}>
//           <Ionicons name="arrow-back" size={24} color="#fff" />
//         </TouchableOpacity>

//                 <Ionicons name="person-circle" size={80} color="#fff" />

//                 {/* Name */}
//                 <CustomText style={styles.name}>{user.name}</CustomText>
//             </View>
//             {/* Details Card */}
//             <View style={styles.detailsCard}>
//                 <View style={styles.detailRow}>
//                     <MaterialCommunityIcons name="email-outline" size={20} color="#555" />
//                     <CustomText style={styles.detailText}>{user.email}</CustomText>
//                 </View>
//                 <View style={styles.detailRow}>
//                     <Ionicons name="call-outline" size={20} color="#555" />
//                     <CustomText style={styles.detailText}>{user.phone}</CustomText>
//                 </View>
//                 <View style={styles.detailRow}>
//                     <MaterialCommunityIcons name="city" size={20} color="#555" />
//                     <CustomText style={styles.detailText}>{user.address.city}</CustomText>
//                 </View>
//                 <View style={styles.detailRow}>
//                     <FontAwesome5 name="building" size={18} color="#555" />
//                     <CustomText style={styles.detailText}>{user.company.name}</CustomText>
//                 </View>
//             </View>
//         </View>
//         //   </View>
//     );

// };

// export default ProfileDetails;

// const styles = StyleSheet.create({
//     container: {
//         flex: 1,
//         backgroundColor: "#fff",
//         alignItems: "center",
//     },
//     header: {
//         width: "100%",
//         // flexDirection: "row",
//         // justifyContent: "space-between",
//         alignItems: "center",
//         backgroundColor: "#f07e3c",
//         // paddingHorizontal: 16,
//         // paddingVertical: 14,
//         height: 180,
//         borderBottomEndRadius: 50,
//         borderBottomStartRadius: 50,
//         // marginBottom: 40,
//         // marginTop:20

//     },
//     headerText: {
//         color: "#fff",
//         fontSize: 18,
//         fontWeight: "600",
//     },
//     avatar: {
//         backgroundColor: "#f07e3c",
//         width: 80,
//         height: 80,
//         borderRadius: 40,
//         justifyContent: "center",
//         alignItems: "center",
//         marginTop: -40,
//     },
//     avatarText: {
//         color: "#fff",
//         fontSize: 32,
//         fontWeight: "bold",
//     },
//     name: {
//         paddingTop: 20,
//         fontSize: 22,
//         fontWeight: "700",
//         color: "#333",
//         marginVertical: 16,
//     },
//     detailsCard: {
//         width: "90%",
//         backgroundColor: "#fff",
//         padding: 16,
//         borderRadius: 16,
//         shadowColor: "#000",
//         shadowOpacity: 0.08,
//         shadowOffset: { width: 0, height: 4 },
//         shadowRadius: 6,
//         elevation: 5,
//         marginTop: 20,
//     },
//     detailRow: {
//         flexDirection: "row",
//         alignItems: "center",
//         marginBottom: 12,
//         gap: 10,
//     },
//     detailText: {
//         fontSize: 16,
//         color: "#444",
//     },
//     errorText: {
//         fontSize: 18,
//         color: "red",
//         fontWeight: "bold",
//     },
//      backButton: {
//     // position: "absolute",
//     // top: 40, // safe margin for status bar
//     left: 20,
//     marginTop:40
//     // zIndex: 10,
//   },
// });


// import { apiName } from '@/constants/constant';
// import { getPosts } from '@/services/service';
// import { useQuery } from '@tanstack/react-query';
// import { StyleSheet } from 'react-native';


// type Post = {
//   id: number;
//   name: string;
//   username: string;
//   email: string;
//   phone: string;
//   website: string;
//   company: { name: string; catchPhrase: string; bs: string };
//   address: { street: string; suite: string; city: string; zipcode: string };
// };


// import { ActivityIndicator, FlatList, Text, View } from 'react-native';

// import CustomText from '@/component/CustomText';



// const ReactData = () => {
//   const { data: posts, error, isLoading, isError, refetch } = useQuery<Post[]>({
//     queryKey: ['posts'],
//     queryFn: () => getPosts(apiName.getInfo),
//   });

//   if (isLoading) {
//     return (
//       <View style={styles.center}>
//         <ActivityIndicator size="large" />
//         <Text>Loading posts...</Text>
//       </View>
//     );
//   }

//   if (isError) {
//     return (
//       <View style={styles.center}>
//         <Text style={{ color: 'red' }}>Error: {error?.message}</Text>
//       </View>
//     );
//   }

//   return (
//     <View style={styles.container}>
//       <FlatList
//         data={posts ?? []}
//         keyExtractor={(item) => item.id.toString()}
//         refreshing={isLoading}
//         onRefresh={() => refetch()}
//         renderItem={({ item }) => (
//           <View style={styles.card}>
//             <CustomText style={styles.name}>{item.name}</CustomText>
//             <CustomText>Email: {item.email}</CustomText>
//             <CustomText>Phone: {item.phone}</CustomText>
//             <CustomText>Company: {item.company.name}</CustomText>
//             <CustomText>City: {item.address.city}</CustomText>
//           </View>
//         )}
//       />
//     </View>
//   );
// };

// export default ReactData;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: '#f8f9fa',
//     padding: 10,
//   },
//   center: {
//     flex: 1,
//     justifyContent: 'center',
//     alignItems: 'center',
//   },
//   card: {
//     backgroundColor: '#fff',
//     padding: 15,
//     borderRadius: 12,
//     marginBottom: 10,
//     shadowColor: '#000',
//     shadowOpacity: 0.1,
//     shadowOffset: { width: 0, height: 2 },
//     shadowRadius: 4,
//     elevation: 2,
//   },
//   name: {
//     fontSize: 16,
//     fontWeight: 'bold',
//     marginBottom: 5,
//   },
// });


// import CustomText from "@/component/CustomText";
// import { apiName } from "@/constants/constant";
// import { getPosts } from "@/services/service";
// import { useQuery } from "@tanstack/react-query";
// import { useCallback } from "react";
// import {
//     ActivityIndicator,
//     FlatList,
//     RefreshControl,
//     StyleSheet,
//     Text,
//     TouchableOpacity,
//     View,
// } from "react-native";

// type Post = {
//   id: number;
//   name: string;
//   email: string;
//   phone: string;
//   company: { name: string };
//   address: { city: string };
// };

// const ReactData = () => {
//   const {
//     data: posts,
//     error,
//     isLoading,
//     isError,
//     refetch,
//     isFetching,
//   } = useQuery<Post[]>({
//     queryKey: ["posts"],
//     queryFn: () => getPosts(apiName.getInfo),
//   });

//   const onRefresh = useCallback(() => {
//     refetch();
//   }, [refetch]);

//   const renderItem = ({ item }: { item: Post }) => (
//     <TouchableOpacity style={styles.card} activeOpacity={0.7}>
//       <CustomText style={styles.title}>{item.name}</CustomText>
//       <CustomText style={styles.body}>📧 {item.email}</CustomText>
//       <CustomText style={styles.body}>📞 {item.phone}</CustomText>
//       <CustomText style={styles.body}>🏙 {item.address.city}</CustomText>
//       <CustomText style={styles.body}>🏢 {item.company.name}</CustomText>
//     </TouchableOpacity>
//   );

//   if (isLoading) {
//     return (
//       <View style={styles.center}>
//         <ActivityIndicator size="large" color="#ff7b00" />
//         <Text style={{ color: "#ff7b00", marginTop: 10 }}>Loading posts...</Text>
//       </View>
//     );
//   }

//   if (isError) {
//     return (
//       <View style={styles.center}>
//         <Text style={styles.errorText}>Error: {error?.message}</Text>
//         <TouchableOpacity style={styles.retryBtn} onPress={() => refetch()}>
//           <Text style={styles.retryText}>Retry</Text>
//         </TouchableOpacity>
//       </View>
//     );
//   }

//   return (
//     <View style={styles.container}>
//       <Text style={styles.header}> Trending Places</Text>

//       <FlatList
//         data={posts ?? []}
//         keyExtractor={(item) => item.id.toString()}
//         renderItem={renderItem}
//         refreshControl={
//           <RefreshControl
//             refreshing={isFetching}
//             onRefresh={onRefresh}
//             colors={["#ff7b00"]}
//           />
//         }
//         contentContainerStyle={{ paddingBottom: 20 }}
//         showsVerticalScrollIndicator={false}
//       />
//     </View>
//   );
// };

// export default ReactData;

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: "#fff8f0",
//     paddingHorizontal: 16,
//     paddingTop: 50,
//   },
//   header: {
//     fontSize: 22,
//     fontWeight: "700",
//     color: "#ff6a00",
//     marginBottom: 16,
//   },
//   card: {
//     backgroundColor: "#fff",
//     padding: 16,
//     borderRadius: 16,
//     marginBottom: 12,
//     shadowColor: "#ff7b00",
//     shadowOpacity: 0.2,
//     shadowOffset: { width: 0, height: 4 },
//     shadowRadius: 6,
//     elevation: 4,
//     borderLeftWidth: 4,
//     borderLeftColor: "#ff7b00",
//   },
//   title: {
//     fontSize: 18,
//     fontWeight: "600",
//     color: "#ff7b00",
//   },
//   body: {
//     fontSize: 14,
//     color: "#444",
//     marginTop: 6,
//   },
//   center: {
//     flex: 1,
//     justifyContent: "center",
//     alignItems: "center",
//   },
//   errorText: {
//     color: "red",
//     fontSize: 16,
//     marginBottom: 10,
//   },
//   retryBtn: {
//     backgroundColor: "#ff7b00",
//     paddingHorizontal: 20,
//     paddingVertical: 10,
//     borderRadius: 10,
//   },
//   retryText: {
//     color: "#fff",
//     fontWeight: "600",
//   },
// });
